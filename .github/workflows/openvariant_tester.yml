# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: OpenVariant tester

on:
  push:
    branches:
      - '**'
      - '!refs/tags/.*'
    tags-ignore:
      - '*'
    paths-ignore:
      - './examples/**'
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - './examples/**'

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install tqdm
        pip install click
        pip install pyyaml
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest tests/test_task/test_group_by.py
        pytest tests/test_task/test_count.py
        pytest tests/test_task/test_cat.py
        pytest tests/test_find/test_find.py
        pytest tests/test_utils/test_where.py
        pytest tests/test_variant/test_variant.py
        pytest tests/test_variant/test_variant_read.py
        pytest tests/test_variant/test_variant_save.py
        pytest tests/test_command/test_count_command.py
        pytest tests/test_command/test_help_command.py
        pytest tests/test_command/test_group_by_command.py
        pytest tests/test_command/test_cat_command.py
        pytest tests/test_annotation/test_annotation.py
        pytest tests/test_annotation/test_process.py
        pytest tests/test_annotation/test_builder.py
